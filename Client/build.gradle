plugins {
    id 'java'
    id 'application'
}

group 'com.bnnthang.fltestbed'
version '1.1-SNAPSHOT'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/bnnthang/RealFL")
        credentials {
            username = System.getenv("GITHUB_USERNAME")
            password = System.getenv("GITHUB_TOKEN")
        }
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    implementation 'com.bnnthang.fltestbed:commonutils:1.29-SNAPSHOT'
    implementation 'org.deeplearning4j:deeplearning4j-core:1.0.0-M2'
    implementation group: 'org.nd4j', name: 'nd4j-native-platform', version: '1.0.0-M2'
    implementation group: 'org.bytedeco', name: 'javacv-platform', version: '1.5.7'
    implementation 'org.bytedeco:opencv:4.5.5-1.5.7'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.2'
    implementation 'com.beust:jcommander:1.82'

    compileOnly 'org.projectlombok:lombok:1.18.22'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'com.bnnthang.fltestbed.Client.App'
}

task uberJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.bnnthang.fltestbed.Client.App'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
    duplicatesStrategy = 'include'
    zip64 = true
}